using Microsoft.AspNetCore.Mvc;
using System.ComponentModel;
using Furion.DynamicApiController;
using @(@Model.ServicePosition);

namespace @(@Model.ControllerPosition);

/// <summary>
/// @(@Model.FunctionName)控制器
/// </summary>
[ApiDescriptionSettings("@(@Model.ApiGroup)", Tag = "@(@Model.FunctionName)")]
[Route("/@(@Model.RouteName)/@(@Model.BusName)")]
public class @(@Model.ClassName)Controller: IDynamicApiController
{
    private readonly I@(@Model.ServiceName) _@(@Model.ServiceFirstLower);

    public @(@Model.ClassName)Controller(I@(@Model.ServiceName) @(@Model.ServiceFirstLower))
    {
        this._@(@Model.ServiceFirstLower) = @(@Model.ServiceFirstLower);
    }

    /// <summary>
    /// @(@Model.DescriptionPage)
    /// </summary>
    /// <param name="input"></param>
    /// <returns></returns>
    [HttpGet("page")]
    [Description("@(@Model.DescriptionPage)")]
    public async Task<dynamic> Page([FromQuery] @Model.PageInput input)
    {
        return await _@(@Model.ServiceFirstLower).Page(input);
    }

    /// <summary>
    /// @(@Model.DescriptionAdd)
    /// </summary>
    /// <param name="input"></param>
    /// <returns></returns>
    [HttpPost("add")]
    [Description("@(@Model.DescriptionAdd)")]
    public async Task Add([FromBody] @(@Model.ClassName)AddInput input)
    {
        await _@(@Model.ServiceFirstLower).Add(input);
    }

    /// <summary>
    /// @(@Model.DescriptionEdit)
    /// </summary>
    /// <param name="input"></param>
    /// <returns></returns>
    [HttpPost("edit")]
    [Description("@(@Model.DescriptionEdit)")]
    public async Task Edit([FromBody] @(@Model.ClassName)EditInput input)
    {
        await _@(@Model.ServiceFirstLower).Edit(input);
    }

    /// <summary>
    /// @(@Model.DescriptionDelete)
    /// </summary>
    /// <param name="input"></param>
    /// <returns></returns>
    [HttpPost("delete")]
    [Description("@(@Model.DescriptionDelete)")]
    public async Task Delete([FromBody] List<BaseIdInput> input)
    {
        await _@(@Model.ServiceFirstLower).Delete(input);
    }

    /// <summary>
    /// @(@Model.DescriptionDetail)
    /// </summary>
    /// <param name="input"></param>
    /// <returns></returns>
    [HttpGet("detail")]
    [Description("@(@Model.DescriptionDetail)")]
    public async Task<dynamic> Detail([FromQuery] BaseIdInput input)
    {
        return await _@(@Model.ServiceFirstLower).Detail(input);
    }
}

